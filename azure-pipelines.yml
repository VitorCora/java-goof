# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '98f1db2d-4c60-4592-8f5d-51955594f906'
  imageRepository: 'vitorcorajavagoof'
  containerRegistry: 'azdevopsnv.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'azdevopsnv20777270-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          sudo apt update -y
          sudo apt install maven -y
          mvn -version
          scp ~/.m2/repository/org/apache/maven/plugins/maven-dependency-plugin/2.2/maven-dependency-plugin-2.2.jar gkahlout@192.168.344.511:/home/gkahlout
          scp ~/.m2/repository/org/apache/maven/plugins/maven-dependency-plugin/2.2/maven-dependency-plugin-2.2.pom gkahlout@192.168.344.511:/home/gkahlout
          mvn install:install-file -DgroupId=org.apache.maven.plugins -DartifactId=maven-dependency-plugin -Dversion=1.1 -Dfile=maven-dependency-plugin-2.2.jar -Dpackaging=jar
          mvn dependency:get -DrepoUrl=http://download.java.net/maven/2/ -Dartifact=org.codehaus.mojo:tomcat-maven-plugin:1.1
    - task: SnykSecurityScan@1
      inputs:
        serviceConnectionEndpoint: 'Coratest'
        testType: 'app'
        monitorWhen: 'always'
        failOnIssues: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'VitorCorajavagoof.javagoof'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

